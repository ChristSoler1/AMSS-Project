# Der Port, auf dem der Server lauscht.
server.port=8086

# Verbindungszeichenkette für die Datenbank, hier wird eine MySQL-Datenbank auf localhost:3306 mit dem Namen kanban_dashboard verwendet.
spring.datasource.url=jdbc:mysql://localhost:3306/kanban_dashboard?createDatabaseIfNotExist=true

# Der vollständige Name der JDBC-Treiberklasse für MySQL.
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Der Benutzername für die Datenbankverbindung.
spring.datasource.username=root

# Das Passwort für die Datenbankverbindung.
spring.datasource.password=password

# Die Strategie, die von Hibernate zum physischen Benennen von Datenbankelementen verwendet wird.
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# Bestimmt die Hibernate DDL-Auto-Eigenschaft, die festlegt, wie Hibernate beim Start der Anwendung mit der Datenbankstruktur umgehen soll.
spring.jpa.hibernate.ddl-auto=none

# Wenn "true" ist, wird Hibernate den SQL erzeugen, den es an die Konsole sendet.
spring.jpa.show-sql=true

# Wenn "true", formatiert Hibernate den SQL, den es an die Konsole sendet.
spring.jpa.properties.hibernate.format_sql=true

# Schaltet die Anzeige des Startbanners von Spring Boot aus.
spring.main.banner-mode=off

# Gleiche Nummer nehmen wie im Frontend Server (3001 oder 3000)
service.allowedOrigins=http://localhost:3001

# Aktualisiert um Mitternacht für Simulation
scheduled.task.cron.expression=0 0 0 * * ?